# -*- coding: utf8 -*-
import json
import os


def open_keys_json_file(path):
    # print('ЧИТАЕМ ДАННЫЕ КЛЮЧЕЙ ИЗ ФАЙЛА: {}\n'.format(path))
    try:
        with open(path, encoding='utf8') as f:
            keys = json.loads(f.read())
            return keys
    except:
        print('ФАЙЛ КЛЮЧЕЙ НЕ НАЙДЕН!\n')
        exit(0)


def open_json_data_file(path):
    # print('Имя файла базы данных: {}\n'.format(path))
    try:
        with open(path, 'r', encoding='utf8') as f:
            try:
                data = json.loads(f.read())
                return data
            except:
                print('\nВ ФАЙЛЕ ДАННЫХ НЕ ОБНАРУЖЕНО\n')
                return
    except:
        print()
        #     print('\nФАЙЛ НЕ ОБНАРУЖЕН.\nСОЗДАЕМ НОВЫЙ ФАЙЛ {}\n'.format(path))


def save_data_to_json_file(path, data):
    with open(path, 'w', encoding='utf8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2, sort_keys=True)


def list_data(data):
    if data != None:
        for index, person in enumerate(data):
            print(str(index + 1) + ') ' + person + ', {} лет'.format(data[person]['Возреаст']))
    else:
        print('\nВ базе данных не обнаружено!')


def input_new_data():
    print('ВВОД НОВЫХ ДАННЫХ\nДля завершения введите пустое имя тестируемого.\n')
    input_data = dict()
    while True:
        name = input('Имя тестируемого: ')

        if name == '':
            break

        age = input('Возраст: ')
        sex = input('Пол (м/ж): ')
        chooses = input('Номера отмеченных ответов через запятую (без пробелов):\n').rstrip().split(',')

        if sex == "м":
            input_data.update({name: {'Возреаст': age, 'Пол': sex, 'Выбор': chooses, 'social_orient_balance': 0,
                                      'over_rules_balance': 0, 'addictive_behavior': 0, 'self_harm_behavior': 0,
                                      'aggression_behavior': 0, 'emotional_reaction': 0, 'delinquency_behavior': 0}})
        elif sex == "ж":
            input_data.update({name: {'Возреаст': age, 'Пол': sex, 'Выбор': chooses, 'social_orient_balance': 0,
                                      'over_rules_balance': 0, 'addictive_behavior': 0, 'self_harm_behavior': 0,
                                      'aggression_behavior': 0, 'emotional_reaction': 0, 'delinquency_behavior': 0,
                                      'women_social_role': 0}})
    return input_data


def counting_individual_balls(data, person):
    # Расчет новых данных для Мальчиков
    if data[person]['Пол'] == 'м':
        # Обнуление данных расчетов
        for key in keys['boys_keys']:
            data[person][key] = 0

        for choose in data[person]['Выбор']:
            for key in keys['boys_keys']:
                if int(choose) in keys['boys']['has_it'][key]:
                    data[person][key] += 1
        for key in keys['boys_keys']:
            for has_not_choose in keys['boys']['has_not'][key]:
                if str(has_not_choose) not in data[person]['Выбор']:
                    data[person][key] += 1

    # Расчет новых данных для Девочек
    if data[person]['Пол'] == 'ж':
        # Обнуление данных расчетов
        for key in keys['girls_keys']:
            data[person][key] = 0
        for choose in data[person]['Выбор']:
            for key in keys['girls_keys']:
                if int(choose) in keys['girls']['has_it'][key]:
                    data[person][key] += 1
        for key in keys['girls_keys']:
            for has_not_choose in keys['girls']['has_not'][key]:
                if str(has_not_choose) not in data[person]['Выбор']:
                    data[person][key] += 1

    # Перевод в Т балы
    # Xi – первичный(«сырой») балл по шкале
    # М – среднее значение первичного суммарного балла по шкале в выборке стандартизации
    # S – стандартное отклонение значений первичных баллов в выборке стандартизации
    # t = (10 * (xi - m) / s + 50)
    for key in keys['boys_keys']:
        data[person][key] = round(10 * (data[person][key] - keys['m_balls'][key]) / keys['s_balls'][key] + 50)


def save_interpretation(data, path):
    if not os.path.exists(path):
        os.mkdir(path, mode=0o755)
    for person in data:
        path_add = ''
        person_text = '--- 1. Шкала установки на социальную желательность (служебная шкала) ---\n' \
                      'Данная шкала предназначена для измерения готовности испытуемого представлять себя' \
                      'в наиболее благоприятном свете с точки зрения социальной желательности.\n'
        key = 'social_orient_balance'
        if int(data[person][key]) < 50:
            person_text += '\nT = {} (T < 50)\nПоказатели свидетельствует о том, что испытуемый не склонен скрывать ' \
                           'собственные нормы и ценности, корректировать свои ответы в направлении ' \
                           'социальной желательности.\n'.format(data[person][key])
        if 50 <= int(data[person][key]) <= 60:
            person_text += '\nT = {} (50 < T < 60)\nПоказатели свидетельствует об умеренной тенденции давать при ' \
                           'заполнении опросника социально-желательные ответы.\n'.format(data[person][key])
        if 60 < int(data[person][key]) < 70:
            person_text += '\nT = {} (60 < T < 70)\nПоказатели свидетельствуют о тенденции испытуемого ' \
                           'демонстрировать строгое соблюдение даже малозначительных социальных норм, ' \
                           'умышленном стремлении показать себя в лучшем свете, о настороженности по ' \
                           'отношению к ситуации обследования.\n'.format(data[person][key])
        if int(data[person][key]) > 70:
            person_text += '\nT = {} (T > 70)\nПоказатели свидетельствуют о высокой настороженности ' \
                           'испытуемого по отношению к психодиагностической ситуации и о сомнительной ' \
                           'достоверности результатов по основным шкалам.\n'.format(data[person][key])
            path_add += '1'

        person_text += '\n\n--- 2. Шкала склонности к преодолению норм и правил ---\n' \
                       'Данная шкала предназначена для измерения предрасположенности испытуемого к преодолению ' \
                       'каких-либо норм и правил, склонности к отрицанию общепринятых норм и ценностей, ' \
                       'образцов поведения.\n '
        key = 'over_rules_balance'
        if int(data[person][key]) < 50:
            person_text += '\nT = {} (T < 50)\nПоказатели свидетельствует о конформных установках испытуемого, ' \
                           'склонности следовать стереотипам и общепринятым нормам поведения. В некоторых случаях при ' \
                           'условии сочетания с достаточно высоким интеллектуальным уровнем испытуемого и тенденции ' \
                           'скрывать свои реальные нормы и ценности такие оценки могут отражать фальсификацию ' \
                           'результатов.\n'.format(data[person][key])
        if 50 <= int(data[person][key]) <= 60:
            person_text += '\nT = {} (50 < T < 60)\nПоказатели свидетельствует овыраженности вышеуказанных тенденций, ' \
                           'о нонкомформистских установках испытуемого, о его склонности противопоставлять ' \
                           'собственные нормы и ценности групповым, о тенденции «нарушать спокойствие», ' \
                           'искать трудности, которые можно было бы преодолеть.\n'.format(data[person][key])
        if 60 < int(data[person][key]) < 70:
            person_text += '\nT = {} (60 < T < 70)\nПоказатели свидетельствуют о чрезвычайной выраженности ' \
                           'нонконформистских тенденций, проявлении негативизма и заставляют сомневаться в ' \
                           'достоверности результатов тестирования по данной шкале.\n'.format(data[person][key])
        if int(data[person][key]) > 70:
            person_text += '\nT = {} (T > 70)\nПоказатели свидетельствуют о чрезвычайной выраженности ' \
                           'нонконформистских тенденций, проявлении негативизма и заставляют сомневаться в ' \
                           'достоверности результатов тестирования по данной шкале. и о сомнительной достоверности ' \
                           'результатов по шкале.\n'.format(data[person][key])
            path_add += '2'

        person_text += '\n\n--- 3. Шкала склонности к аддиктивному поведению ---\n' \
                       'Данная шкала предназначена для измерения готовности реализовать аддиктивное поведение.\n '
        key = 'addictive_behavior'
        if int(data[person][key]) < 50:
            person_text += '\nT = {} (T < 50)\nПоказатели свидетельствует о невыраженности вышеперечисленных ' \
                           'тенденций, либо о хорошем социальном контроле поведенческих реакций.\n'.format(
                data[person][key])
        if 50 <= int(data[person][key]) <= 70:
            person_text += '\nT = {} (50 < T < 70)\nПоказатели свидетельствуют о предрасположенности испытуемого к ' \
                           'уходу от реальности посредством ' \
                           'изменения своего психического состояния, о склонностях к иллюзорно-компенсаторному ' \
                           'способу решения личностных проблем. Кроме того, эти результаты свидетельствуют об ' \
                           'ориентации на чувственную сторону жизни, о наличии «сенсорной жажды», о гедонистически ' \
                           'ориентированных нормах и ценностях.\n'.format(data[person][key])
        if int(data[person][key]) > 70:
            person_text += '\nT = {} (T > 70)\nПоказатели свидетельствуют о сомнительности результатов либо о наличии ' \
                           'выраженной психологической потребности в аддиктивных состояниях, что необходимо выяснять, ' \
                           'используя дополнительные психодиагностические средства.\n'.format(data[person][key])
            path_add += '3'

        person_text += '\n\n--- 4. Шкала склонности к самоповреждающему и саморазрушающему поведению ---\n' \
                       'Данная шкала предназначена для измерения готовности реализовать различные формы ' \
                       'аутоагрессивного поведения. Объект измерения очевидно частично пересекается с ' \
                       'психологическими свойствами, измеряемыми шкалой № 3.\n '
        key = 'self_harm_behavior'
        if int(data[person][key]) < 50:
            person_text += '\nT = {} (T < 50)\nПоказатели свидетельствует об отсутствии готовности к реализации ' \
                           'саморазрушающего поведения, об отсутствии тенденции к соматизации тревоги, отсутствии ' \
                           'склонности к реализации комплексов вины в поведенческих реакциях.\n'.format(
                data[person][key])
        if 50 <= int(data[person][key]) <= 70:
            person_text += '\nT = {} (50 < T < 70)\nПоказатели свидетельствуют о низкой ценности собственной жизни, ' \
                           'склонности к риску, выраженной потребности в острых ощущениях, о садо-мазохистских ' \
                           'тенденциях.\n'.format(data[person][key])
        if int(data[person][key]) > 70:
            person_text += '\nT = {} (T > 70)\nПоказатели свидетельствуют о сомнительной достоверности результатов.' \
                           '\n'.format(data[person][key])
            path_add += '4'

        person_text += '\n\n--- 5. Шкала склонности к агрессии и насилию ---\n' \
                       'Данная шкала предназначена для измерения готовности испытуемого к реализации агрессивных ' \
                       'тенденций в поведении.\n '
        key = 'aggression_behavior'
        if int(data[person][key]) < 50:
            person_text += '\nT = {} (T < 50)\nПоказатели свидетельствует о невыраженности агрессивных тенденций, ' \
                           'о неприемлемости насилия как средства решения проблем, о нетипичности агрессии как ' \
                           'способа выхода из фрустрирующей ситуации. Низкие показатели по данной шкале в сочетании с ' \
                           'высокими показателями по шкале социальной желательности свидетельствуют о высоком уровне ' \
                           'социального контроля поведенческих реакций.\n'.format(data[person][key])
        if 50 <= int(data[person][key]) <= 60:
            person_text += '\nT = {} (50 < T < 60)\nПоказатели свидетельствуют о наличии агрессивных тенденций у ' \
                           'испытуемого.\n'.format(data[person][key])
        if 60 < int(data[person][key]) <= 70:
            person_text += '\nT = {} (60 < T < 70)\nПоказатели свидетельствуют об агрессивной направленности личности ' \
                           'во взаимоотношениях с другими людьми, о склонности решать проблемы посредством насилия, ' \
                           'о тенденции использовать унижение партнера по общению как средство стабилизации ' \
                           'самооценки, о наличии садистических тенденций.\n'.format(data[person][key])
            path_add += '5'
        if int(data[person][key]) > 70:
            person_text += '\nT = {} (T > 70)\nПоказатели свидетельствуют о СОМНИТЕЛЬНОЙ достоверности результатов.' \
                           '\n'.format(data[person][key])
            path_add += '5'

        person_text += '\n\n--- 6. Шкала волевого контроля эмоциональных реакций ---\n' \
                       'Данная шкала предназначена для измерения склонности испытуемого контролировать поведенческие ' \
                       'проявления эмоциональных реакций (Внимание! Эта шкала имеет обратный характер).\n '
        key = 'emotional_reaction'
        if int(data[person][key]) < 50:
            person_text += '\nT = {} (T < 50)\nПоказатели свидетельствует о невыраженности этих тенденций, о жестком ' \
                           'самоконтроле любых поведенческих эмоциональных реакций, чувственных влечений.\n'.format(
                data[person][key])
        if 50 <= int(data[person][key]) <= 60:
            person_text += '\nT = {} (50 < T < 60)\nПоказатели не выражены (нет интерпретации)\n'.format(
                data[person][key])
        if 60 < int(data[person][key]) <= 70:
            person_text += '\nT = {} (60 < T < 70)\nПоказатели свидетельствуют о слабости волевого контроля ' \
                           'эмоциональной сферы, о нежелании или неспособности контролировать поведенческие ' \
                           'проявления эмоциональных реакций. Кроме того, это свидетельствует о склонности ' \
                           'реализовывать негативные эмоции непосредственно в поведении, без задержки, ' \
                           'о несформированности волевого контроля своих потребностей и чувственных влечений. ' \
                           '\n'.format(data[person][key])
            path_add += '6'
        if int(data[person][key]) > 70:
            person_text += '\nT = {} (T > 70)\nПоказатели свидетельствуют о СОМНИТЕЛЬНОЙ достоверности результатов.' \
                           '\n'.format(data[person][key])
            path_add += '6'

        person_text += '\n\n--- 7. Шкала склонности к деликвентному поведению ---\n' \
                       'Название шкалы носит условный характер, так как шкала сформирована из утверждений, ' \
                       'дифференцирующих «обычных» подростков и лиц с зафиксированными правонарушениями, вступавших в ' \
                       'конфликт с общепринятым образом жизни и правовыми нормами.\nНа наш взгляд, данная шкала ' \
                       'измеряет готовность (предрасположенность) подростков к реализации деликвентного поведения. ' \
                       'Выражаясь метафорически, шкалы выявляет «деликвентный потенциал», который лишь при ' \
                       'определенных обстоятельствах может реализоваться в жизни подростка. \n '
        key = 'delinquency_behavior'
        if int(data[person][key]) < 50:
            person_text += '\nT = {} (T < 50)\nПоказатели свидетельствуют о невыражености указанных тенденций, что в сочетании с высокими ' \
                           'показателями по шкале социальной желательности может свидетельствовать о высоком уровне ' \
                           'социального контроля.\n'.format(
                data[person][key])
        if 50 <= int(data[person][key]) <= 60:
            person_text += '\nT = {} (50 < T < 60)\nПоказатели свидетельствуют о наличии деликвентных тенденций у ' \
                           'испытуемого и о низком уровне социального контроля.\n'.format(data[person][key])
        if int(data[person][key]) > 60:
            person_text += '\nT = {} (T > 60)\nПоказатели свидетельствуют о высокой готовности к реализации ' \
                           'деликвентного поведения.\n'.format(data[person][key])
            path_add += '7'

        if path_add != '':
            path_add += ' (' + path_add + ')'
        person_path = path + '/' + person + path_add + '.txt'
        with open(person_path, 'w', encoding='utf8') as f:
            f.write(person_text)


def choose_menu(data):
    print('\nПрограмма обработки даных теста СОП Орлова')
    choose = 0

    while choose != 'q':
        print('\nМЕНЮ ПРОГРАММЫ:\n')
        print('1. Вывести список имеющихся респондентов')
        print('2. Добавить новые данные')
        print('3. Подсчитать результаты тестирования')
        print('4. Сохранить интерпритации в файлы')
        print('q. Выход')
        choose = input('\nСделайте выбор (1 - 4 или q): ')
        if choose == '1':
            list_data(data)
        elif choose == '2':
            if data is not None:
                data.update(input_new_data())
            else:
                data = (input_new_data())
        elif choose == '3':
            if data == None:
                print('\nВ базе данных не обнаружено!')
            else:
                for person in data:
                    counting_individual_balls(data, person)
        elif choose == '4':
            if data == None:
                print('\nВ базе данных не обнаружено!')
            else:
                path = './' + file_name.replace('.json', '')
                save_interpretation(data, path)
        elif choose == 'q':
            if data != None:
                save_data_to_json_file(file_name, data)
                # print('\nДАННЫЕ УСПЕШНО СОХРАНЕНЫ В БАЗУ.')
            break


file_name = input('Введите имя файла для сохранения данных: ')
# file_name = '12-7a.json'

keys = open_keys_json_file('sop_keys.json')
choose_menu(open_json_data_file(file_name))
